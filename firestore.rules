rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is active
    function isUserActive() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isActive == true;
    }

    // Allow read access to all reviews
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if isUserActive();
    }
    
    // Allow read access to all movies
    match /movies/{movieId} {
      allow read: if true;
      allow write: if isUserActive();
    }
    
    // Allow access to users
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && (
        request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
      
      // Allow access to user's collections subcollection
      match /collections/{collectionId} {
        allow read: if true;
        allow write: if isUserActive() && request.auth.uid == userId;
      }
    }

    // Allow access to collections
    match /collections/{collectionId} {
      allow read: if true;
      allow create: if isUserActive() && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isUserActive() && request.auth.uid == resource.data.userId;
      
      // Allow access to collection movies subcollection
      match /movies/{movieId} {
        allow read: if true;
        allow write: if isUserActive() && request.auth.uid == get(/databases/$(database)/documents/collections/$(collectionId)).data.userId;
      }
    }

    // Allow access to collection movies
    match /collectionMovies/{document=**} {
      allow read: if true;
      allow write: if isUserActive() && request.auth.uid == request.resource.data.userId;
    }
  }
} 